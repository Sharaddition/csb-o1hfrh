{"version":3,"sources":["utils/wallet.js","App.js","index.js"],"names":["wallet","StartWallet","connection","Connection","network","servers","console","log","HathorWallet","seed","pinCode","password","tokenUid","start","on","state","a","ERROR","isReady","address","value","token_id","changeAddress","getCurrentAddress","sendTransaction","token","tx","message","helpers","isBlock","tx_id","App","className","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"idAoEeA,EAlEA,CACPC,YADO,WACQ,OAAD,kHAGhB,4JACU,OACK,aAGXC,EAAa,IAAIC,aAAW,CAChCC,QAAS,UACTC,QAAS,CAAC,oDAEZC,QAAQC,IAAI,sBAGNP,EAAS,IAAIQ,eAAa,CAC9BN,WAAYA,EACZO,KAdA,4JAeAC,QAdU,OAeVC,SAde,aAefC,SAAU,OAGZN,QAAQC,IAAI,eAvBM,SA0BZP,EAAOa,QA1BK,OA6BlBb,EAAOc,GAAG,QAAV,uCAAmB,WAAOC,GAAP,qBAAAC,EAAA,yDACbD,IAAUP,eAAaS,MADV,gBAGfX,QAAQC,IAAI,8BAHG,2BAINP,EAAOkB,UAJD,wBAKXC,EAAU,qCACVC,EAAQ,EACRC,EAAW,KACXC,EAAgB,KAEpBhB,QAAQC,IAAI,0BAVG,KAWfD,QAXe,UAWGN,EAAOuB,oBAXV,gCAWPhB,IAXO,gBAafD,QAAQC,IAAI,2BACZD,QAAQC,IAAIc,GAdG,UAgBTrB,EAAOwB,gBAAgBL,EAASC,EAAO,CAC3CK,MAAOJ,EACPC,kBAlBa,4CAAnB,uDAuBAtB,EAAOc,GAAG,SAAV,uCAAoB,WAAOY,GAAP,eAAAV,EAAA,sDACdW,EAAU,aAEZA,EADEC,UAAQC,QAAQH,GACR,8CAEA,uDAEZpB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAI,sBAAqBmB,EAAGI,OARlB,2CAApB,uDApDkB,gDCCP,SAASC,IACtB,OACE,yBAAKC,UAAU,OACb,iDACA,4BAAQC,QAAS,kBAAMjC,EAAOC,gBAA9B,SACA,wECJN,IAAMiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,aAAD,KACE,kBAACP,EAAD,OAEFG,K","file":"static/js/main.ab2c46a8.chunk.js","sourcesContent":["import { helpers, HathorWallet, Connection } from \"@hathor/wallet-lib\";\r\n\r\nconst wallet = {\r\n  async StartWallet() {\r\n    // Config for wallet\r\n    const seed =\r\n      \"range wonder roof trumpet soon urge unaware satisfy confirm kidney critic rookie wild used merry teach smooth puzzle salute desk pepper jeans creek valve\";\r\n    const pin = \"1234\";\r\n    const password = \"testwallet\";\r\n\r\n    // Start connection object\r\n    const connection = new Connection({\r\n      network: \"testnet\",\r\n      servers: [\"https://node1.golf.testnet.hathor.network/v1a/\"]\r\n    });\r\n    console.log(\"Connection created\");\r\n\r\n    // Wallet object to start wallet\r\n    const wallet = new HathorWallet({\r\n      connection: connection,\r\n      seed: seed,\r\n      pinCode: pin,\r\n      password,\r\n      tokenUid: \"00\"\r\n    });\r\n\r\n    console.log(\"Starting...\");\r\n\r\n    // Let's start wallet\r\n    await wallet.start();\r\n\r\n    // Check state of wallet\r\n    wallet.on(\"state\", async (state) => {\r\n      if (state === HathorWallet.ERROR) {\r\n        // ERROR\r\n        console.log(\"OOps something went wrong.\");\r\n      } else if (wallet.isReady()) {\r\n        var address = \"WZwkgSjMD9vNFbBLa88N8T1D69JMRuhH5W\";\r\n        var value = 5;\r\n        var token_id = \"00\";\r\n        var changeAddress = null;\r\n        // READY\r\n        console.log(\"Current Address -->\");\r\n        console.log(await wallet.getCurrentAddress());\r\n\r\n        console.log(\"Starting transaction...\");\r\n        console.log(token_id);\r\n\r\n        await wallet.sendTransaction(address, value, {\r\n          token: token_id,\r\n          changeAddress\r\n        });\r\n      }\r\n    });\r\n\r\n    wallet.on(\"new-tx\", async (tx) => {\r\n      let message = \"No new tx.\";\r\n      if (helpers.isBlock(tx)) {\r\n        message = \"You've found a new block! Click to open it.\";\r\n      } else {\r\n        message = \"You've received a new transaction! Click to open it.\";\r\n      }\r\n      console.log(message);\r\n      console.log(\"Transaction --> \" + tx.tx_id);\r\n    });\r\n  }\r\n};\r\n\r\nexport default wallet;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport wallet from \"./utils/wallet\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <button onClick={() => wallet.StartWallet()}>Start</button>\n      <h2>Start editing to see some magic happen!</h2>\n    </div>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}